// Generated by jextract

package org.unix;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$17 {

    static final  OfInt getdate_err$LAYOUT = Constants$root.C_INT$LAYOUT;
    static final VarHandle getdate_err$VH = constants$17.getdate_err$LAYOUT.varHandle();
    static final MemorySegment getdate_err$SEGMENT = RuntimeHelper.lookupGlobalVariable("getdate_err", constants$17.getdate_err$LAYOUT);
    static final  OfLong timezone$LAYOUT = Constants$root.C_LONG_LONG$LAYOUT;
    static final VarHandle timezone$VH = constants$17.timezone$LAYOUT.varHandle();
    static final MemorySegment timezone$SEGMENT = RuntimeHelper.lookupGlobalVariable("timezone", constants$17.timezone$LAYOUT);
    static final  OfInt daylight$LAYOUT = Constants$root.C_INT$LAYOUT;
    static final VarHandle daylight$VH = constants$17.daylight$LAYOUT.varHandle();
    static final MemorySegment daylight$SEGMENT = RuntimeHelper.lookupGlobalVariable("daylight", constants$17.daylight$LAYOUT);
    static final FunctionDescriptor asctime$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle asctime$MH = RuntimeHelper.downcallHandle(
        "asctime",
        constants$17.asctime$FUNC
    );
    static final FunctionDescriptor clock$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT);
    static final MethodHandle clock$MH = RuntimeHelper.downcallHandle(
        "clock",
        constants$17.clock$FUNC
    );
}


