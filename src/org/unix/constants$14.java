// Generated by jextract

package org.unix;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$14 {

    static final FunctionDescriptor fmtcheck$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle fmtcheck$MH = RuntimeHelper.downcallHandle(
        "fmtcheck",
        constants$14.fmtcheck$FUNC
    );
    static final FunctionDescriptor fpurge$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle fpurge$MH = RuntimeHelper.downcallHandle(
        "fpurge",
        constants$14.fpurge$FUNC
    );
    static final FunctionDescriptor setbuffer$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle setbuffer$MH = RuntimeHelper.downcallHandle(
        "setbuffer",
        constants$14.setbuffer$FUNC
    );
    static final FunctionDescriptor setlinebuf$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle setlinebuf$MH = RuntimeHelper.downcallHandle(
        "setlinebuf",
        constants$14.setlinebuf$FUNC
    );
    static final FunctionDescriptor vasprintf$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle vasprintf$MH = RuntimeHelper.downcallHandle(
        "vasprintf",
        constants$14.vasprintf$FUNC
    );
    static final FunctionDescriptor funopen$x0$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
}


