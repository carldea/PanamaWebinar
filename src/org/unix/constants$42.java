// Generated by jextract

package org.unix;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$42 {

    static final FunctionDescriptor getsgroups_np$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle getsgroups_np$MH = RuntimeHelper.downcallHandle(
        "getsgroups_np",
        constants$42.getsgroups_np$FUNC
    );
    static final FunctionDescriptor getusershell$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle getusershell$MH = RuntimeHelper.downcallHandle(
        "getusershell",
        constants$42.getusershell$FUNC
    );
    static final FunctionDescriptor getwgroups_np$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle getwgroups_np$MH = RuntimeHelper.downcallHandle(
        "getwgroups_np",
        constants$42.getwgroups_np$FUNC
    );
    static final FunctionDescriptor initgroups$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle initgroups$MH = RuntimeHelper.downcallHandle(
        "initgroups",
        constants$42.initgroups$FUNC
    );
    static final FunctionDescriptor issetugid$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT);
    static final MethodHandle issetugid$MH = RuntimeHelper.downcallHandle(
        "issetugid",
        constants$42.issetugid$FUNC
    );
    static final FunctionDescriptor mkdtemp$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle mkdtemp$MH = RuntimeHelper.downcallHandle(
        "mkdtemp",
        constants$42.mkdtemp$FUNC
    );
}


