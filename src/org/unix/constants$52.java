// Generated by jextract

package org.unix;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$52 {

    static final FunctionDescriptor ffsctl$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle ffsctl$MH = RuntimeHelper.downcallHandle(
        "ffsctl",
        constants$52.ffsctl$FUNC
    );
    static final FunctionDescriptor fsync_volume_np$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle fsync_volume_np$MH = RuntimeHelper.downcallHandle(
        "fsync_volume_np",
        constants$52.fsync_volume_np$FUNC
    );
    static final FunctionDescriptor sync_volume_np$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle sync_volume_np$MH = RuntimeHelper.downcallHandle(
        "sync_volume_np",
        constants$52.sync_volume_np$FUNC
    );
    static final  OfInt optreset$LAYOUT = Constants$root.C_INT$LAYOUT;
    static final VarHandle optreset$VH = constants$52.optreset$LAYOUT.varHandle();
    static final MemorySegment optreset$SEGMENT = RuntimeHelper.lookupGlobalVariable("optreset", constants$52.optreset$LAYOUT);
    static final MemorySegment __DARWIN_SUF_64_BIT_INO_T$SEGMENT = RuntimeHelper.CONSTANT_ALLOCATOR.allocateUtf8String("$INODE64");
    static final MemorySegment __DARWIN_SUF_1050$SEGMENT = RuntimeHelper.CONSTANT_ALLOCATOR.allocateUtf8String("$1050");
}


